<?php
/**
 * @file Provides test for patches to path.inc
 */


/**
 * Test changes to drupal_lookup_path().
 */
class DrupalLookupPathTest extends DrupalTestCase {
  private $testPath  = NULL;
  private $testAlias = 'test/lookup/path/test';
  private $testNode  = NULL;

  /**
   * Initialize the test.
   */
  function setUp() {
    parent::setUp();
    $this->drupalModuleEnable('path');
    
    $this->testNode = $this->drupalCreateNode();
    $this->testPath = 'node/' . $this->testNode->nid;

    path_set_alias($this->testPath, $this->testAlias);
    drupal_clear_path_cache();
  }


  /**
   * Clean up after ourselves.
   */
  function tearDown() {
    db_query("DELETE FROM {url_alias} WHERE dst = '%s'", $this->testAlias);
    parent::tearDown();
  }


  /**
   * Provides information about this test.
   *
   * @return array An array of test information.
   */
  function get_info() {
    return array(
      'name'  => t('path.inc drupal_lookup_path Test'),
      'desc'  => t('Tests patches made to drupal_lookup_path().'),
      'group' => 'Pressflow Core',
    );
  }


  /**
   * Confirm that the path can be retrieved by alias.
   */
  function testLookupByAlias() {
    $src = drupal_get_normal_path($this->testAlias);
    $msg = t('Lookup by alias. Expected @expect got @got : %s',
             array('@expect' => $this->testPath, '@got' => $src));
    $this->assertEqual($src, $this->testPath, $msg);
  }


  /**
   * Confirm that the path can be retrieved by source.
   */
  function testLookupBySource() {
    $alias = drupal_get_path_alias($this->testPath);
    $msg = t('Lookup by source. Expected @expect got @got : %s',
             array('@expect' => $this->testAlias, '@got' => $alias));
    $this->assertEqual($alias, $this->testAlias, 'Lookup path by source: %s');
  }
}
