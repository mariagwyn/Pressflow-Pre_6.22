<?php
/**
 * @file Test the changes to the taxonomy module
 */
 
/**
 * Test changes to taxonomy.
 */
class TaxonomyModuleTest extends DrupalTestCase {
  private $vocab_name = 'pressflow_taxonomy_test_vocab';
  private $terms = array('Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 
                         'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 
                         'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 
                         'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega');
  private $vid;
  
  
  /**
   * Provides information about this test.
   *
   * @return array An array of test information.
   */
  function get_info() {
    return array(
      'name'  => t('taxonomy.module autocomplete test'),
      'desc'  => t('Verify LOWER patch for taxonomy module.'),
      'group' => 'Pressflow Core',
    );
  }


  /**
   * Initialize the test.
   */
  function setUp() {
    parent::setUp();
    $this->drupalModuleEnable('taxonomy');
    
    // Create a vocabulary to work witrh.
    $voc = array(
      'vid'         => NULL,
      'name'        => $this->vocab_name,
      'description' => '',
      'help'        => '',
      'multiple'    => 0,
      'required'    => 0,
      'hierarchy'   => 0,
      'relations'   => 0,
      'tags'        => 0,
      'weight'      => 0,
    );
    
    taxonomy_save_vocabulary($voc);
    $this->vid = $voc['vid'];
    
    // Add some terms to the vocabulary.
    foreach ($this->terms as $name) {
      $term = array(
        'tid'         => NULL,
        'name'        => $name,
        'description' => '',
        'vid'         => $this->vid,
        'weight'      => 0,
        'relations'   => NULL,
        'synonyms'    => NULL,
      );
      taxonomy_save_term($term);
    }
  }


  /**
   * Clean up after ourselves.
   */
  function tearDown() {
    taxonomy_del_vocabulary($this->vid);
    
    parent::tearDown();
  }


  /**
   * Verify that a term is returned regardless of the case of the name.
   */
  function test_taxonomy_get_term_by_name() {
    $name    = pressflow_tests_fuzz_case('omicron');
    $results = taxonomy_get_term_by_name($name);
        
    $this->assertNotEqual(count($results), 0, "Search for {$name} found results %s");
  }


  /**
   * Verify that autocomplete works regardless of case.
   */
  function test_taxonomy_autocomplete() {
    $js    = $this->drupalGet(url('taxonomy/autocomplete/' . $this->vid . '/OMI', NULL, NULL, TRUE));
    $dummy = array();
    $count = preg_match_all('/\:/', $js, $dummy);
    
    $this->assertEqual($count, 1, 'Found autocomplete term: %s');
  }

}
