<?php
/**
 * @file Test for profile.module auto complete function patch.
 */


/**
 * Test changes to profile_autocomplete().
 */
class ProfileAutocompleteTest extends DrupalTestCase {
  private $field_id;
  private $fields = array(
    'profile_auto_complete_test_fav_color'       => 'Preferences',
    'profile_auto_complete_test_last_conviction' => 'Personal History',
    'profile_auto_complete_test_parole_date'     => 'Personal History',
    'profile_auto_complete_test_favorite_sport'  => 'Activities',
    'profile_auto_complete_test_fav_transit'     => 'Preferences',
  );
  
  private $values = array('Red', 'Orange', 'Yellow', 'Green', 'Blue', 
                          'Violet', 'Indigo', 'Brown', 'Grey', 'Black',
                          'Aqua', 'Cyan', 'Avocado', 'Salmon', 
                          'Burnt Sienna', 'Burnt Umbra', 'Red Ochre',
                          'Blue-Green');

  /**
   * Provides information about this test.
   *
   * @return array An array of test information.
   */
  function get_info() {
    return array(
      'name'  => t('profile.module autocomplete test'),
      'desc'  => t('Verify that autocompletes return correct data regardless of case.'),
      'group' => 'Pressflow Core',
    );
  }


  /**
   * Initialize the test.
   */
  function setUp() {
    parent::setUp();
    $this->drupalModuleEnable('profile');
    
    // Create several fake fields with categories.
    foreach ($this->fields as $name => $category) {
      db_query("INSERT INTO {profile_fields} (title, name, category, autocomplete) VALUES ('%s', '%s', '%s', 1)", $name, $name, $category);
    }
    
    // Create some values for the favorite color field.
    $this->field_id = db_result(db_query("SELECT fid FROM {profile_fields} WHERE name='profile_auto_complete_test_fav_color'"));
    
    foreach ($this->values as $value) {
      db_query("INSERT INTO {profile_values} (fid, uid, value) VALUES (%d, 1, '%s')", $this->field_id, $value);
    }
  }


  /**
   * Clean up after ourselves.
   */
  function tearDown() {
    // Delete the values for the fake field
    db_query('DELETE FROM {profile_values} WHERE fid = %d', $this->field_id);
    
    // Delete the fake fields
    db_query("DELETE FROM {profile_fields} WHERE name LIKE 'profile_auto_complete_test_%%'");
  
    parent::tearDown();
  }


  /**
   * Test that field values auto-complete works regardless of case.
   */
  function test_profile_autocomplete() {
    $js = $this->drupalGet(url('profile/autocomplete/' . $this->field_id . '/bL', NULL, NULL, TRUE));
    $dummy = array();
    $count = preg_match_all('/\:/', $js, $dummy);
    
    $this->assertEqual($count, 3, 'Returned item count: %s');
  }


  /**
   * Test that category auto-complete works regardless of case.
   */
  function test_profile_admin_settings_autocomplete() {
    $user = $this->drupalCreateUserRolePerm(array('administer users'));
    $this->drupalLoginUser($user);
    
    $js    = $this->drupalGet(url('admin/user/profile/autocomplete/p', NULL, NULL, TRUE));
    $dummy = array();
    $count = preg_match_all('/\:/', $js, $dummy);
    
    $this->assertEqual($count, 2, 'Returned item count: %s');
  }

}
